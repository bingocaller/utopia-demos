/* @link https://utopia.fyi/space/calculator?c=320,16,1.2,1440,14,1.25,5,2,1024&s=0.75|0.5|0.25,1.5|2|3|4|6,s-l */

:root {
  --fluid-min-width: 320;
  --fluid-max-width: 1440;

  --fluid-screen: 100vw;
  --fluid-bp: calc((var(--fluid-screen) - var(--fluid-min-width) / 16 * 1rem) / (var(--fluid-max-width) - var(--fluid-min-width)));
}

@media screen and (min-width: 1440px) {
  :root {
    --fluid-screen: calc(var(--fluid-max-width) * 1px);
  }
}

:root {
  --fc-3xs-min: (var(--fc-s-min) * 0.25);
  --fc-3xs-max: (var(--fc-s-max) * 0.25);

  --fc-2xs-min: (var(--fc-s-min) * 0.5);
  --fc-2xs-max: (var(--fc-s-max) * 0.5);

  --fc-xs-min: (var(--fc-s-min) * 0.75);
  --fc-xs-max: (var(--fc-s-max) * 0.75);

  --fc-s-min: (var(--f-0-min, 16));
  --fc-s-max: (var(--f-0-max, 14));

  --fc-m-min: (var(--fc-s-min) * 1.5);
  --fc-m-max: (var(--fc-s-max) * 1.5);

  --fc-l-min: (var(--fc-s-min) * 2);
  --fc-l-max: (var(--fc-s-max) * 2);

  --fc-xl-min: (var(--fc-s-min) * 3);
  --fc-xl-max: (var(--fc-s-max) * 3);

  --fc-2xl-min: (var(--fc-s-min) * 4);
  --fc-2xl-max: (var(--fc-s-max) * 4);

  --fc-3xl-min: (var(--fc-s-min) * 6);
  --fc-3xl-max: (var(--fc-s-max) * 6);

  /* T-shirt sizes */
  --space-3xs: calc(((var(--fc-3xs-min) / 16) * 1rem) + (var(--fc-3xs-max) - var(--fc-3xs-min)) * var(--fluid-bp));
  --space-2xs: calc(((var(--fc-2xs-min) / 16) * 1rem) + (var(--fc-2xs-max) - var(--fc-2xs-min)) * var(--fluid-bp));
  --space-xs: calc(((var(--fc-xs-min) / 16) * 1rem) + (var(--fc-xs-max) - var(--fc-xs-min)) * var(--fluid-bp));
  --space-s: calc(((var(--fc-s-min) / 16) * 1rem) + (var(--fc-s-max) - var(--fc-s-min)) * var(--fluid-bp));
  --space-m: calc(((var(--fc-m-min) / 16) * 1rem) + (var(--fc-m-max) - var(--fc-m-min)) * var(--fluid-bp));
  --space-l: calc(((var(--fc-l-min) / 16) * 1rem) + (var(--fc-l-max) - var(--fc-l-min)) * var(--fluid-bp));
  --space-xl: calc(((var(--fc-xl-min) / 16) * 1rem) + (var(--fc-xl-max) - var(--fc-xl-min)) * var(--fluid-bp));
  --space-2xl: calc(((var(--fc-2xl-min) / 16) * 1rem) + (var(--fc-2xl-max) - var(--fc-2xl-min)) * var(--fluid-bp));
  --space-3xl: calc(((var(--fc-3xl-min) / 16) * 1rem) + (var(--fc-3xl-max) - var(--fc-3xl-min)) * var(--fluid-bp));
  
  /* One-up pairs */
  --space-3xs-2xs: calc(((var(--fc-3xs-min) / 16) * 1rem) + (var(--fc-2xs-max) - var(--fc-3xs-min)) * var(--fluid-bp));
  --space-2xs-xs: calc(((var(--fc-2xs-min) / 16) * 1rem) + (var(--fc-xs-max) - var(--fc-2xs-min)) * var(--fluid-bp));
  --space-xs-s: calc(((var(--fc-xs-min) / 16) * 1rem) + (var(--fc-s-max) - var(--fc-xs-min)) * var(--fluid-bp));
  --space-s-m: calc(((var(--fc-s-min) / 16) * 1rem) + (var(--fc-m-max) - var(--fc-s-min)) * var(--fluid-bp));
  --space-m-l: calc(((var(--fc-m-min) / 16) * 1rem) + (var(--fc-l-max) - var(--fc-m-min)) * var(--fluid-bp));
  --space-l-xl: calc(((var(--fc-l-min) / 16) * 1rem) + (var(--fc-xl-max) - var(--fc-l-min)) * var(--fluid-bp));
  --space-xl-2xl: calc(((var(--fc-xl-min) / 16) * 1rem) + (var(--fc-2xl-max) - var(--fc-xl-min)) * var(--fluid-bp));
  --space-2xl-3xl: calc(((var(--fc-2xl-min) / 16) * 1rem) + (var(--fc-3xl-max) - var(--fc-2xl-min)) * var(--fluid-bp));

  /* Custom pairs */
  --space-s-l: calc(((var(--fc-s-min) / 16) * 1rem) + (var(--fc-l-max) - var(--fc-s-min)) * var(--fluid-bp));
}

$sizes: (
  ('3xs', #800),
  ('2xs', #f00),
  ('xs',  #f80),
  ('s',   #ff0),
  ('m',   #0f0),
  ('l',   #00f),
  ('xl',  #80f),
  ('2xl', #f0f),
  ('3xl', #f08),
);

$types: (
  'margin',
  'padding',
);

$directions: (
  'block',
  'block-start',
  'block-end',
  'inline',
  'inline-start',
  'inline-end',
);

@mixin spacing-visualiser($size, $color, $type, $direction: null) {
  position: relative;

  > .spacing-visualiser {
    --size: var(--space-#{$size});
    position: absolute;
    background-color: #{$color}3;
    color: inherit;
    font-family: monospace;
    font-size: var(--step--2);
    opacity: 0.5;
    pointer-events: none;
    white-space: nowrap;

    &::before {
      position: absolute;
      content: attr(data-content);
      inset-block-start: 50%;
      inset-inline-start: 50%;
      transform: translate(-50%, -50%);
    }

    &.spacing-visualiser--block-start,
    &.spacing-visualiser--block-end {
      height: var(--size);
      inset-inline: 0;
    }

    &.spacing-visualiser--block-start {
      inset-block-start: if($type == 'margin', calc(-1 * var(--size)), 0);
    }

    &.spacing-visualiser--block-end {
      inset-block-end: if($type == 'margin', calc(-1 * var(--size)), 0);
    }

    &.spacing-visualiser--inline-start,
    &.spacing-visualiser--inline-end {
      width: var(--size);
      inset-block: 0;

      &::before {
        writing-mode: vertical-lr;
      }
    }

    &.spacing-visualiser--inline-start {
      inset-inline-start: if($type == 'margin', calc(-1 * var(--size)), 0);
    }

    &.spacing-visualiser--inline-end {
      inset-inline-end: if($type == 'margin', calc(-1 * var(--size)), 0);
    }
  }
}

@each $size, $color in $sizes {
  @each $type in $types {
    %u-#{$type}--#{$size} {
      @include spacing-visualiser($size, $color, $type);
      #{$type}: var(--space-#{$size}) !important;
    }
    .u-#{$type}--#{$size} {
      @extend %u-#{$type}--#{$size};
    }
    @each $direction in $directions {
      %u-#{$type}-#{$direction}--#{$size} {
        @include spacing-visualiser($size, $color, $type, $direction);
        #{$type}-#{$direction}: var(--space-#{$size}) !important;
      }
      .u-#{$type}-#{$direction}--#{$size} {
        @extend %u-#{$type}-#{$direction}--#{$size};
      }
    }
  }
}

.hide-visualisers .spacing-visualiser {
  display: none;
}
