@use 'utopia';

$columns: 12;

:root {
  font-family: Inter, sans-serif;
  box-sizing: border-box;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

html,
body {
  margin: 0;
  padding: 0;
}

body {
  padding-block-end: var(--step-0);
}

h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
  font-family: Poppins, sans-serif;
}

h1 {
  font-size: var(--step-5);
}

h2 {
  font-size: var(--step-4);
}

h3 {
  font-size: var(--step-3);
}

h4 {
  font-size: var(--step-2);
}

h5 {
  font-size: var(--step-1);
}

h6 {
  font-size: var(--step-0);
}

.grid {
  display: grid;
  grid-template-columns: repeat($columns, minmax(0, 1fr));
  gap: var(--step-0);
  padding-inline: var(--step-0);
  margin-inline: auto;
}

.grid--fixed {
  max-width: calc(var(--fluid-max-width) * 1px);
}

.overlay {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
}

.column {
  opacity: 0.0625;
  background-color: red;
}

.grid-span {
  grid-column: span $columns;
  overflow: auto;
}

.field-element {
  padding: var(--step-0);
  background-color: #efefef;
}

// Static spans
@for $span from 1 to $columns {
  .grid-span--#{$span} {
    grid-column: span $span;
  }
}
$breakpoints: (
  "small": 600px,
  "medium": 840px,
  "large": 1280px,
);
@each $breakpoint-name, $breakpoint-size in $breakpoints {
  @media (min-width: $breakpoint-size) {
    @for $span from 1 to $columns {
      .grid-span--#{$breakpoint-name}-#{$span} {
        grid-column: span $span;
      }
    }
  }
}
